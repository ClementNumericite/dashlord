{"version":3,"sources":["utils.ts","components/Sidebar.tsx","components/Topbar.tsx","components/Grade.tsx","components/Dashboard.tsx","components/Panel.tsx","components/HTTP.tsx","components/Gauge.tsx","components/LightHouse.tsx","components/Nuclei.tsx","components/Owasp.tsx","components/TestSSL.tsx","components/Trackers.tsx","components/Wappalyzer.tsx","components/UpdownIo.tsx","components/Dependabot.tsx","components/Url.tsx","components/Intro.tsx","components/ScrollToTop.tsx","components/About.tsx","components/WappalyzerDashboard.tsx","App.tsx","index.tsx"],"names":["smallUrl","url","toLowerCase","replace","getLastUrlSegment","substring","lastIndexOf","sortByKey","key","a","b","isToolEnabled","name","dashlordConfig","require","tools","length","includes","Sidebar","report","sortedReport","sort","categories","uniq","filter","u","category","map","Nav","className","to","activeClassName","exact","size","style","marginTop","marginRight","whiteSpace","Topbar","Navbar","variant","bg","sticky","expand","justifyContent","height","fontSize","color","title","grades","A","B","C","D","E","F","Grade","grade","label","small","newGrade","toUpperCase","Badge","minWidth","scoreToGrade","score","x1","x2","split","Math","min","floor","IconUnknown","ColumnHeader","info","background","top","placement","trigger","overlay","cursor","LightHouseBadge","lhrCategories","lhr","value","toFixed","SSLBadge","overallGrade","testssl","find","entry","id","finding","HTTPBadge","http","ZapBadge","owaspAlerts","zap","site","flatMap","alerts","riskcode","owaspCount","owaspGrade","maxSeverity","max","o","parseInt","getOwaspGrade","ThirdPartiesTrackersBadge","thirdparties","count","trackersCount","trackers","trackersGrade","ThirdPartiesCookiesBadge","cookiesCount","cookies","cookiesGrade","NucleiBadge","nuclei","events","nucleiCount","nucleiGrade","n","severity","DependabotBadge","dependabot","dependabotCount","repo","vulnerabilityAlerts","totalCount","reduce","prev","curr","dependabotGrade","nodes","securityVulnerability","Map","set","orders","get","UpDownIoBadge","updownio","uptime","updownioGrade","Dashboard","Table","striped","bordered","hover","urlReport","encodeURIComponent","Panel","children","Card","marginBottom","Title","padding","fontWeight","marginLeft","float","href","target","rel","Body","HttpRowBadge","row","abs","score_modifier","HTTP","data","failures","Object","keys","details","pass","width","failure","i","score_description","Gauge","props","canvas","useRef","span","gauge","useEffect","current","donut","Donut","CanvasGauge","setTextField","setOptions","options","maxValue","setMinValue","minValue","animationSpeed","textChangeHandler","passThroughProps","ref","display","defaultProps","percentColors","angle","lineWidth","radiusScale","pointer","strokeWidth","strokeColor","generateGradient","highDpiSupport","toTime","ms","minutes","seconds","rest","toSize","bytes","factor","mb","kb","LightHouse","audits","metrics","highlights","items","firstContentfulPaint","interactive","diagnostics","numRequests","totalByteWeight","Row","Col","xs","md","lg","nucleiSeverities","nucleiOrder","indexOf","Nuclei","rows","templateID","matcher_name","orderBySeverity","order","confidence","OwaspBadge","riskdesc","Owasp","alert","severities","TestSSL","gradeEntry","severity_value","reverse","capReasons","reason","Alert","CookiesTable","colSpan","cookie","domain","httpOnly","secure","TrackersTable","tracker","type","message","EndPointsTable","endpoints","endpoint","Flag","geoip","country","Flags","iso_code","names","fr","hostname","ip","city","Trackers","hasIssues","push","Wappalyzer","technologies","techno","cat","join","website","UpdownIo","urlUpdownio","token","ssl","valid","Date","expires_at","toLocaleDateString","node","Dependabot","console","log","JSON","stringify","package","advisory","references","reference","Url","updateDate","fetchTime","Jumbotron","paddingTop","tags","tag","formatDistanceToNow","locale","frLocale","process","window","btoa","repository","wappalyzer","Intro","Button","ScrollToTop","pathname","useLocation","scrollTo","About","textAlign","margin","maxWidth","UsageChart","BarChart","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","toChartData","item","urls","WappalyzerDashboard","allTechnologies","categoriesNames","t","c","getTechUrl","byTech","sortedTechs","getCategoriesByUrl","CardColumns","CategoryRoute","params","useParams","decodeURIComponent","TagRoute","UrlRoute","urlData","App","Container","fluid","role","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0edd1fe0.chunk.js","sourcesContent":["\nexport const smallUrl = (url: string): string =>\n  url\n    .toLowerCase()\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\");\n\nexport const getHostName = (url: string): string =>\n  url\n    .replace(/^https?:\\/\\//, \"\")\n    .replace(/\\/$/, \"\")\n    .replace(/^([^/]+)\\/.+$/, \"$1\");\n\nexport const getLastUrlSegment = (url: string): string =>\n  url.substring(url.lastIndexOf(\"/\") + 1);\n\nexport const sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nexport const isToolEnabled = (name: DashlordTool): boolean => {\n  const dashlordConfig: DashlordConfig  = require(\"./config.json\");\n  const hasTools = dashlordConfig.tools && dashlordConfig.tools.length;\n  return !hasTools || !!(dashlordConfig.tools && dashlordConfig.tools.includes(name));\n};\n","import * as React from \"react\";\n\nimport { Nav } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { Home, BarChart, Search } from \"react-feather\";\nimport uniq from \"lodash.uniq\";\n\nimport { smallUrl, sortByKey, isToolEnabled } from \"../utils\";\n\ntype SidebarProps = {\n  report: DashLordReport;\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ report }) => {\n  const sortedReport = (report && report.sort(sortByKey(\"url\"))) || [];\n  const categories = uniq(\n    sortedReport.filter((u) => u.category).map((u) => u.category)\n  ).sort() as string[];\n  return (\n    <Nav className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n      <div className=\"sidebar-sticky pt-3\">\n        <ul className=\"nav flex-column\">\n          <li className=\"nav-item\">\n            <NavLink\n              to=\"/\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <Home size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Accueil\n            </NavLink>\n            <NavLink\n              to=\"/dashboard\"\n              className=\"nav-link\"\n              activeClassName=\"active\"\n              exact={true}\n            >\n              <BarChart size={16} style={{ marginTop: -5, marginRight: 5 }} />\n              Tableau de bord\n            </NavLink>\n          </li>\n        </ul>\n\n        {(categories.length > 1 && (\n          <React.Fragment>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Catégories</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              {categories.map((category) => (\n                <li\n                  className=\"nav-item\"\n                  key={category}\n                  style={{\n                    whiteSpace: \"pre\",\n                  }}\n                >\n                  <NavLink\n                    className=\"nav-link\"\n                    to={`/category/${category}`}\n                    activeClassName=\"active\"\n                    exact={true}\n                  >\n                    <BarChart\n                      size={16}\n                      style={{ marginTop: -5, marginRight: 5 }}\n                    />\n                    {category}\n                  </NavLink>\n                </li>\n              ))}\n            </ul>\n          </React.Fragment>\n        )) ||\n          null}\n\n        {isToolEnabled(\"wappalyzer\") && (\n          <div>\n            <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n              <span>Rapports</span>\n            </h6>\n            <ul className=\"nav flex-column\">\n              <li\n                className=\"nav-item\"\n                style={{\n                  whiteSpace: \"pre\",\n                }}\n              >\n                <NavLink\n                  className=\"nav-link\"\n                  to={`/wappalyzer`}\n                  activeClassName=\"active\"\n                  exact={true}\n                >\n                  <BarChart\n                    size={16}\n                    style={{ marginTop: -5, marginRight: 5 }}\n                  />\n                  Technologies\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        )||null}\n\n        <h6 className=\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\">\n          <span>Urls</span>\n        </h6>\n\n        <ul className=\"nav flex-column\">\n          {sortedReport.map((url) => (\n            <li\n              className=\"nav-item\"\n              key={url.url}\n              style={{\n                whiteSpace: \"pre\",\n              }}\n            >\n              <NavLink\n                className=\"nav-link\"\n                to={`/url/${url.url}`}\n                activeClassName=\"active\"\n                exact={true}\n              >\n                <Search size={16} style={{ marginTop: -5, marginRight: 5 }} />\n                {smallUrl(url.url)}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Nav>\n  );\n};\n","import * as React from \"react\";\nimport { Cloud, Info } from \"react-feather\";\nimport { Navbar } from \"react-bootstrap\";\n\nimport { Link } from \"react-router-dom\";\n\nexport const Topbar = () => (\n  <Navbar\n    variant=\"dark\"\n    bg=\"dark\"\n    sticky=\"top\"\n    expand=\"lg\"\n    className=\"p-0 flex-md-nowrap shadow\"\n    style={{ justifyContent: 'space-between' }}\n  >\n    <Link to=\"/\">\n      <div\n        className=\"px-3\"\n        style={{ height: 30, fontSize: \"1.3rem\", color: \"var(--white)\" }}\n      >\n        <Cloud size={16} style={{ marginTop: -5, marginRight: 10 }} />\n        DashLord\n      </div>\n    </Link>\n    <Link title=\"À propos\" to=\"/about\" style={{ color: \"white\", marginRight: 5 }}><Info /></Link>\n  </Navbar>\n);\n","import * as React from \"react\";\n\nimport { Badge } from \"react-bootstrap\";\n\ntype GradeProps = {\n  grade: string | number;\n  label?: string | number | null;\n  small?: boolean;\n};\n\nconst grades = {\n  A: \"success\",\n  B: \"info\",\n  C: \"info\",\n  D: \"warning\",\n  E: \"danger\",\n  F: \"danger\",\n} as Record<string, string>;\n\nexport const Grade: React.FC<GradeProps> = ({ grade, label, small }) => {\n  const newGrade = (grade + \"\").substring(0, 1).toUpperCase();\n  const variant = grades[newGrade] || \"danger\";\n\n  return (\n    <Badge\n      variant={variant}\n      style={{ minWidth: 60, fontSize: small ? \"1.1em\" : \"2em\" }}\n    >\n      {label || grade}\n    </Badge>\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\nimport { Slash, Info, Search } from \"react-feather\";\nimport { Link } from \"react-router-dom\";\nimport Tooltip from \"rc-tooltip\";\n\nimport { Grade } from \"./Grade\";\nimport { sortByKey, smallUrl, isToolEnabled } from \"../utils\";\n\nimport \"rc-tooltip/assets/bootstrap.css\";\n\ntype DashboardProps = { report: DashLordReport };\n\nconst remap = (value: number, x1: number, y1: number, x2: number, y2: number) =>\n  ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n\nconst scoreToGrade = (score: number) => {\n  const grades = \"A,B,C,D,E,F\".split(\",\");\n\n  const newGrade = Math.min(\n    grades.length - 1,\n    Math.floor(remap(score, 0, 1, 0, 6))\n  );\n\n  return grades[newGrade];\n};\n\nconst IconUnknown = () => <Slash size={20} />;\n\nconst getGradeTrackers = (count: number) => {\n  return count > 10 ? \"F\" : count > 2 ? \"C\" : count > 0 ? \"B\" : \"A\";\n};\n\nconst getGradeCookies = (count: number) => {\n  return count > 10\n    ? \"F\"\n    : count > 5\n    ? \"E\"\n    : count > 2\n    ? \"C\"\n    : count > 0\n    ? \"B\"\n    : \"A\";\n};\n\nconst getNucleiGrade = (events: NucleiReportEntry[]) => {\n  return events.filter(\n    (n) => n.info.severity === \"critical\" || n.info.severity === \"high\"\n  ).length\n    ? \"F\"\n    : events.length\n    ? \"B\"\n    : \"A\";\n};\n\nconst getOwaspGrade = (owaspAlerts: ZapReportSiteAlert[]) => {\n  const maxSeverity = Math.max(\n    ...owaspAlerts.map((o) => parseInt(o.riskcode) || 0)\n  );\n\n  return maxSeverity > 3\n    ? \"F\"\n    : maxSeverity > 2\n    ? \"D\"\n    : maxSeverity > 1\n    ? \"C\"\n    : maxSeverity > 0\n    ? \"B\"\n    : \"A\";\n};\n\nconst getGradeUpdownio = (uptime: number) => {\n  return uptime > 0.99\n    ? \"A\"\n    : uptime > 0.98\n    ? \"B\"\n    : uptime > 0.97\n    ? \"C\"\n    : uptime > 0.96\n    ? \"D\"\n    : uptime > 0.95\n    ? \"E\"\n    : \"F\";\n};\n\nconst getDependabotNodeGrade = (nodes: DependabotNode[]) => {\n  return nodes.filter(\n    (a) =>\n      a.securityVulnerability.severity === \"CRITICAL\" ||\n      a.securityVulnerability.severity === \"HIGH\"\n  ).length\n    ? \"F\"\n    : nodes.length\n    ? \"B\"\n    : \"A\";\n};\n\ntype ColumnHeaderProps = {\n  title: string;\n  info: string;\n};\n\nconst ColumnHeader: React.FC<ColumnHeaderProps> = ({ title, info }) => (\n  <th\n    className=\"text-center sticky-top\"\n    style={{ background: \"var(--white)\", top: 30 }}\n  >\n    <Tooltip\n      placement=\"bottom\"\n      trigger={[\"hover\"]}\n      overlay={<span>{info}</span>}\n    >\n      <span style={{ fontSize: \"0.9em\" }}>\n        {title}\n        <br />\n        <Info size={16} style={{ cursor: \"pointer\" }} />\n      </span>\n    </Tooltip>\n  </th>\n);\n\ntype BadgeProps = { report: UrlReport };\ntype LightHouseBadgeProps = BadgeProps & {\n  category: LighthouseReportCategoryKey;\n};\n\nconst LightHouseBadge: React.FC<LightHouseBadgeProps> = ({\n  report,\n  category,\n}) => {\n  const lhrCategories = report.lhr && report.lhr.categories;\n  if (!lhrCategories) {\n    return <IconUnknown />;\n  }\n  const value =\n    lhrCategories &&\n    lhrCategories[category] &&\n    (lhrCategories[category].score as number);\n  return (\n    <Grade\n      small\n      grade={scoreToGrade(1 - value)}\n      label={(value * 100).toFixed() + \" %\"}\n    />\n  );\n};\n\nconst SSLBadge: React.FC<BadgeProps> = ({ report }) => {\n  const overallGrade =\n    report.testssl &&\n    report.testssl.find((entry) => entry.id === \"overall_grade\");\n  const value = overallGrade && overallGrade.finding;\n  if (!value) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={value} />;\n};\n\nconst HTTPBadge: React.FC<BadgeProps> = ({ report }) => {\n  const value = report.http && report.http.grade;\n  if (!value) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={value} />;\n};\n\nconst ZapBadge: React.FC<BadgeProps> = ({ report }) => {\n  const owaspAlerts =\n    (report.zap &&\n      report.zap.site &&\n      report.zap.site.flatMap((site) =>\n        site.alerts.filter((a) => a.riskcode !== \"0\")\n      )) ||\n    [];\n  const owaspCount = report.zap && owaspAlerts.length;\n  const owaspGrade = getOwaspGrade(owaspAlerts);\n\n  if (!owaspGrade) {\n    return <IconUnknown />;\n  }\n  return <Grade small grade={owaspGrade} label={owaspCount} />;\n};\n\nconst ThirdPartiesTrackersBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.thirdparties) {\n    return <IconUnknown />;\n  }\n  const trackersCount =\n    (report.thirdparties &&\n      report.thirdparties.trackers &&\n      report.thirdparties.trackers.length) ||\n    0;\n  const trackersGrade = getGradeTrackers(trackersCount);\n  return <Grade small grade={trackersGrade} label={trackersCount} />;\n};\n\nconst ThirdPartiesCookiesBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.thirdparties) {\n    return <IconUnknown />;\n  }\n  const cookiesCount =\n    (report.thirdparties &&\n      report.thirdparties.cookies &&\n      report.thirdparties.cookies.length) ||\n    0;\n  const cookiesGrade = getGradeCookies(cookiesCount);\n  return <Grade small grade={cookiesGrade} label={cookiesCount} />;\n};\n\nconst NucleiBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.nuclei) {\n    return <IconUnknown />;\n  }\n\n  // NUCLEI\n  const nucleiCount = report.nuclei && report.nuclei.length;\n  const nucleiGrade = report.nuclei && getNucleiGrade(report.nuclei);\n\n  return <Grade small grade={nucleiGrade} label={nucleiCount} />;\n};\n\nconst DependabotBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.dependabot) {\n    return <IconUnknown />;\n  }\n\n  // dependabot\n  const dependabotCount =\n    report.dependabot &&\n    report.dependabot\n      .map((repo) => repo.vulnerabilityAlerts.totalCount)\n      .reduce((prev, curr) => prev + curr, 0);\n  const maxGrade = (a: \"F\" | \"B\" | \"A\", b: \"F\" | \"B\" | \"A\") => {\n    const grades = new Map();\n    grades.set(\"F\", 3);\n    grades.set(\"B\", 2);\n    grades.set(\"A\", 1);\n    const orders = new Map();\n    orders.set(3, \"F\");\n    orders.set(2, \"B\");\n    orders.set(1, \"A\");\n    return orders.get(Math.max(grades.get(a), grades.get(b)));\n  };\n  const dependabotGrade =\n    report.dependabot &&\n    report.dependabot\n      .map((repo) =>\n        getDependabotNodeGrade(repo.vulnerabilityAlerts.nodes)\n      )\n      .reduce(maxGrade);\n\n  return <Grade small grade={dependabotGrade} label={dependabotCount} />;\n};\n\nconst UpDownIoBadge: React.FC<BadgeProps> = ({ report }) => {\n  if (!report.updownio) {\n    return <IconUnknown />;\n  }\n  const updownio = report.updownio && report.updownio.uptime;\n  const updownioGrade = getGradeUpdownio(updownio);\n  return (\n    <Grade small grade={updownioGrade} label={updownio.toFixed() + \" %\"} />\n  );\n};\n\nexport const Dashboard: React.FC<DashboardProps> = ({ report }) => {\n  const sortedReport = (report && report.sort(sortByKey(\"url\"))) || [];\n\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th\n            className=\"sticky-top\"\n            style={{ background: \"var(--white)\", top: 30 }}\n          >\n            url\n          </th>\n          {isToolEnabled(\"lighthouse\") && (\n            <ColumnHeader\n              title=\"Accessibilité\"\n              info=\"Bonnes pratiques en matière d'accessibilité web\"\n            />\n          )}\n          {isToolEnabled(\"lighthouse\") && (\n            <ColumnHeader\n              title=\"Performance\"\n              info=\"Performances de chargement des pages web\"\n            />\n          )}\n          {isToolEnabled(\"lighthouse\") && (\n            <ColumnHeader\n              title=\"SEO\"\n              info=\"Bonnes pratiques en matière de référencement naturel\"\n            />\n          )}\n          {isToolEnabled(\"testssl\") && (\n            <ColumnHeader\n              title=\"SSL\"\n              info=\"Niveau de sécurité du certificat SSL\"\n            />\n          )}\n          {isToolEnabled(\"http\") && (\n            <ColumnHeader\n              title=\"HTTP\"\n              info=\"Bonnes pratiques de configuration HTTP\"\n            />\n          )}\n          {isToolEnabled(\"updownio\") && (\n            <ColumnHeader title=\"Updown.io\" info=\"Temps de réponse\" />\n          )}\n          {isToolEnabled(\"dependabot\") && (\n            <ColumnHeader\n              title=\"Vulnérabilités\"\n              info=\"Dependabot security scan\"\n            />\n          )}\n          {isToolEnabled(\"zap\") && (\n            <ColumnHeader\n              title=\"OWASP\"\n              info=\"Bonnes pratiques de sécurité OWASP\"\n            />\n          )}\n          {isToolEnabled(\"thirdparties\") && (\n            <ColumnHeader\n              title=\"Trackers\"\n              info=\"Nombre de scripts externes présents\"\n            />\n          )}\n          {isToolEnabled(\"thirdparties\") && (\n            <ColumnHeader title=\"Cookies\" info=\"Nombre de cookies présents\" />\n          )}\n          {isToolEnabled(\"nuclei\") && (\n            <ColumnHeader title=\"Nuclei\" info=\"Erreurs de configuration\" />\n          )}\n        </tr>\n      </thead>\n      <tbody>\n        {sortedReport.map((urlReport) => {\n          return (\n            <tr key={urlReport.url}>\n              <td>\n                <Link to={`/url/${encodeURIComponent(urlReport.url)}`}>\n                  <Search size={16} />\n                  &nbsp;{smallUrl(urlReport.url)}\n                </Link>\n              </td>\n              {isToolEnabled(\"lighthouse\") && (\n                <td className=\"text-center\">\n                  <LightHouseBadge\n                    report={urlReport}\n                    category=\"accessibility\"\n                  />\n                </td>\n              )}\n              {isToolEnabled(\"lighthouse\") && (\n                <td className=\"text-center\">\n                  <LightHouseBadge report={urlReport} category=\"performance\" />\n                </td>\n              )}\n              {isToolEnabled(\"lighthouse\") && (\n                <td className=\"text-center\">\n                  <LightHouseBadge report={urlReport} category=\"seo\" />\n                </td>\n              )}\n              {isToolEnabled(\"testssl\") && (\n                <td className=\"text-center\">\n                  <SSLBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"http\") && (\n                <td className=\"text-center\">\n                  <HTTPBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"updownio\") && (\n                <td className=\"text-center\">\n                  <UpDownIoBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"dependabot\") && (\n                <td className=\"text-center\">\n                  <DependabotBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"zap\") && (\n                <td className=\"text-center\">\n                  <ZapBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"thirdparties\") && (\n                <td className=\"text-center\">\n                  <ThirdPartiesTrackersBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"thirdparties\") && (\n                <td className=\"text-center\">\n                  <ThirdPartiesCookiesBadge report={urlReport} />\n                </td>\n              )}\n              {isToolEnabled(\"nuclei\") && (\n                <td className=\"text-center\">\n                  <NucleiBadge report={urlReport} />\n                </td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n","import * as React from \"react\";\n\nimport { Card } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-feather\";\n\ntype PanelProps = {\n  title: string;\n  children: React.ReactNode;\n  info?: string;\n  url?: string;\n  style?: object;\n  className?:string;\n};\n\nexport const Panel: React.FC<PanelProps> = ({ title, children, info, url, style, className }) => (\n  <Card style={{ marginBottom: 20, ...style }} className={className}>\n    <Card.Title style={{ background: \"#000091\", color: \"white\", padding: 10 }}>\n      {title}\n      {info && (\n        <span\n          style={{ fontWeight: \"normal\", fontSize: \"0.6em\", marginLeft: 10 }}\n        >\n          {info}\n        </span>\n      )}\n      {url && (\n        <a\n          style={{ color: \"white\", float: \"right\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\"\n        >\n          <ExternalLink />\n        </a>\n      )}\n    </Card.Title>\n    <Card.Body>{children}</Card.Body>\n  </Card>\n);\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\ntype HTTPProps = { data: HttpReport };\n\nconst HttpRowBadge = (row: HttpTestReport) => {\n  const severity = Math.abs(row.score_modifier);\n  const variant =\n    severity > 50\n      ? \"danger\"\n      : severity > 30\n      ? \"danger\"\n      : severity > 20\n      ? \"warning\"\n      : severity > 10\n      ? \"info\"\n      : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nexport const HTTP: React.FC<HTTPProps> = ({ data }) => {\n  if (!data.url) {\n    return null;\n  }\n  const url =\n    (data && `https://observatory.mozilla.org/analyze/${smallUrl(data.url)}`) ||\n    null;\n  const failures = Object.keys(data.details)\n    .filter((key) => !data.details[key].pass)\n    .map((key) => data.details[key]);\n  failures.sort((a, b) => a.score_modifier - b.score_modifier);\n\n  return (\n    url && (\n      <Panel\n        title=\"HTTP\"\n        info=\"Informations collectées par le Mozilla HTTP observatory\"\n        url={url}\n      >\n        <h3>\n          Scan Summary : <Grade small grade={data.grade} />\n        </h3>\n        <br />\n        <br />\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>impact</th>\n              <th>id</th>\n              <th>description</th>\n            </tr>\n          </thead>\n          <tbody>\n            {failures.map((failure, i) => (\n              <tr key={failure.name + i}>\n                <td>\n                  <HttpRowBadge {...failure} />\n                </td>\n                <td>{failure.name}</td>\n\n                <td>{failure.score_description}</td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Panel>\n    )||null\n  );\n};\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport { Gauge as CanvasGauge, Donut } from \"gaugeJS/dist/gauge.min\";\n\n// copied from https://unpkg.com/react-gaugejs@1.2.1/Gauge.js due to bad transpilation\n\ntype GaugeProps = {\n  maxValue?: number;\n  minValue?: number;\n  width?: number;\n  height?: number;\n  animationSpeed?: number;\n  options?: object;\n  donut?: boolean;\n  value: number;\n  className?: string;\n};\n\n/**\n * React wrapper for GaugeJS.\n * @param {*} props\n * @return {Object} React element\n */\nexport const Gauge: React.FC<GaugeProps> = (props) => {\n  const canvas = useRef();\n  const span = useRef();\n  const gauge = useRef();\n\n  useEffect(() => {\n    gauge.current = props.donut\n      ? new Donut(canvas.current)\n      : new CanvasGauge(canvas.current);\n    gauge.current.setTextField(span.current);\n    gauge.current.setOptions(props.options);\n    gauge.current.maxValue = props.maxValue;\n    gauge.current.setMinValue(props.minValue);\n    gauge.current.animationSpeed = props.animationSpeed;\n    gauge.current.set(props.value);\n  }, [props.donut]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    gauge.current.setOptions(props.options);\n  }, [props.options]);\n\n  useEffect(() => {\n    gauge.current.maxValue = props.maxValue;\n  }, [props.maxValue]);\n\n  useEffect(() => {\n    gauge.current.setMinValue(props.minValue);\n  }, [props.minValue]);\n\n  useEffect(() => {\n    gauge.current.animationSpeed = props.animationSpeed;\n  }, [props.animationSpeed]);\n\n  useEffect(() => {\n    gauge.current.set(props.value);\n  }, [props.value]);\n\n  /* eslint-disable no-unused-vars */\n  const {\n    maxValue,\n    minValue,\n    animationSpeed,\n    options,\n    donut,\n    value,\n    textChangeHandler,\n    ...passThroughProps\n  } = props;\n  /* eslint-enable no-unused-vars */\n\n  return (\n    <>\n      <canvas\n        ref={canvas}\n        className=\"gauge-canvas\"\n        {...passThroughProps}\n      ></canvas>\n      <span ref={span} style={{ display: \"none\" }}></span>\n    </>\n  );\n};\n\nGauge.defaultProps = {\n  maxValue: 3000,\n  minValue: 0,\n  animationSpeed: 32,\n  options: {\n    // staticLabels: {\n    //   font: \"10px sans-serif\", // Specifies font\n    //   labels: [100, 130, 150, 220.1, 260, 300], // Print labels at these values\n    //   color: \"#000000\", // Optional: Label text color\n    //   fractionDigits: 0, // Optional: Numerical precision. 0=round off.\n    // },\n    percentColors: [\n      [0.0, \"#FF4E42\"],\n      [0.5, \"#ffa400\"],\n      [0.9, \"#0CCE6B\"],\n      //[0.90, \"#ffa400\"],\n      //  [0.3, \"#ff0000\"],\n      // [0.5, \"#f9c802\"],\n      [1, \"#0CCE6B\"],\n    ],\n    angle: 0.25,\n    lineWidth: 0.44,\n    radiusScale: 1,\n    pointer: {\n      length: 0.6,\n      strokeWidth: 0.035,\n      color: \"#333\",\n    },\n    //limitMax: false,\n    //limitMin: false,\n    //colorStart: \"red\",\n    //colorStop: \"pink\",\n    strokeColor: \"#FF4E42\",\n    generateGradient: true,\n    highDpiSupport: true,\n  },\n  donut: false,\n  textChangeHandler: () => {},\n};\n\nexport default Gauge;\n","import * as React from \"react\";\n\nimport { Row, Col, Card } from \"react-bootstrap\";\n\nimport { Gauge } from \"./Gauge\";\nimport { Panel } from \"./Panel\";\n\nconst toTime = (ms: number) => {\n  let minutes = 0,\n    seconds = 0;\n  let rest = ms;\n  if (rest > 60 * 1000) {\n    minutes = Math.floor(rest / 60000);\n    rest -= minutes * 60000;\n  }\n  if (rest > 1000) {\n    seconds = Math.floor(rest / 1000);\n    rest -= seconds * 1000;\n  }\n  if (minutes > 0) {\n    return `${minutes}min ${(seconds / 100).toFixed()}s`;\n  }\n  return `${seconds}.${(rest / 100).toFixed()}s`;\n};\n\nconst toSize = (bytes: number) => {\n  const factor = 1000;\n  let mb = 0,\n    kb = 0;\n  let rest = bytes;\n  if (rest > factor * factor) {\n    mb = Math.floor(rest / (factor * factor));\n    rest -= mb * factor * factor;\n  }\n  if (rest > factor) {\n    kb = Math.floor(rest / factor);\n    rest -= kb * factor;\n  }\n  if (mb > 0) {\n    return `${mb}.${(kb / 100).toFixed()}Mb`;\n  }\n  return `${kb}.${(rest / 100).toFixed()}Kb`;\n};\n\ntype LighthouseProps = { data: LighthouseReport, url: string };\n\nexport const LightHouse: React.FC<LighthouseProps> = ({ data, url }) => {\n\n  if (!data.audits.metrics.details) {\n    return null\n  }\n  const highlights = { \n     \"First contentful Paint\":  data.audits.metrics.details && data.audits.metrics.details.items && toTime(\n      data.audits.metrics.details.items[0].firstContentfulPaint\n    ),\n    \"Time to interactive\":  data.audits.metrics.details && data.audits.metrics.details.items && toTime(\n      data.audits.metrics.details.items[0].interactive\n    ),\n    \"Total requests\": data.audits.diagnostics.details && data.audits.diagnostics.details.items && data.audits.diagnostics.details.items[0].numRequests,\n    \"Total weight\":  data.audits.diagnostics.details && data.audits.diagnostics.details.items && toSize(\n      data.audits.diagnostics.details.items[0].totalByteWeight\n    ),\n    // \"Max server Latency\": toTime(\n    //   data.audits.diagnostics.details.items[0].maxServerLatency\n  //   ),\n  } as object;\n\n  const order = [\"accessibility\", \"performance\", \"seo\", \"best-practices\"];\n\n  return (\n    <Panel\n      title=\"LightHouse\"\n      info=\"Informations collectées par l'outil Google LightHouse\"\n      url={url}\n    >\n      <Row>\n        {order.map((key , i: number) => {\n          const category = data.categories[key as LighthouseReportCategoryKey];\n          return category.score && (\n            <Col\n              key={category.title + i}\n              xs={12}\n              md={6}\n              lg={3}\n              className=\"text-center mb-3\"\n            >\n              <Card>\n                <Gauge\n                  width={100}\n                  height={60}\n                  value={category.score * 100}\n                  minValue={0}\n                  maxValue={100}\n                  animationSpeed={32}\n                />\n                <Card.Body>\n                  <Card.Title>{category.title}</Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                  >\n                    {(category.score * 100).toFixed() + \"%\"}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          )||null;\n        })}\n      </Row>\n      <Row >\n        {Object.keys(highlights).map((label) => {\n          return (\n            <Col xs={3} key={label}>\n              <Card className=\"text-center\">\n                <Card.Body>\n                  <Card.Title style={{ fontSize: \"0.9rem\" }}>\n                    {label}\n                  </Card.Title>\n                  <Card.Title\n                    style={{ fontSize: \"1.5rem\", fontWeight: \"bold\" }}\n                  >\n                    {/* @ts-expect-error */}\n                    {highlights[label]}\n                  </Card.Title>\n                </Card.Body>\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </Panel>\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\nconst NucleiBadge = (row: NucleiReportEntry) => {\n  const severity = (row.info && row.info.severity) || \"critical\";\n  const variant =\n    severity === \"critical\"\n      ? \"danger\"\n      : severity === \"high\"\n        ? \"danger\"\n        : severity === \"medium\"\n          ? \"warning\"\n          : severity === \"low\"\n            ? \"info\"\n            : \"success\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\nconst nucleiSeverities = \"info,low,medium,high,critical\".split(\",\");\n\nconst nucleiOrder = (a: NucleiReportEntry, b: NucleiReportEntry) => (\n  nucleiSeverities.indexOf(a.info.severity) -\n  nucleiSeverities.indexOf(b.info.severity)\n);\n\n\ntype NucleiProps = { data: NucleiReport };\n\nexport const Nuclei: React.FC<NucleiProps> = ({ data }) => {\n  const rows = data;\n  rows.sort(nucleiOrder);\n  return (\n    (rows.length && (\n      <Panel\n        title=\"Nuclei\"\n        info=\"Détection d'erreurs de configuration et vulnérabilités\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }}>severity</th>\n              <th>id</th>\n              <th>name</th>\n              <th>matcher</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((failure: NucleiReportEntry, i: number) => {\n              return (\n                <tr key={failure.templateID + i}>\n                  <td>\n                    <NucleiBadge {...failure} />\n                  </td>\n                  <td>{failure.templateID}</td>\n                  <td>{failure.info.name}</td>\n                  <td>{failure.matcher_name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: ZapReportSiteAlert, b: ZapReportSiteAlert) => {\n  // high criticity first\n  const order = parseInt(b.riskcode) - parseInt(a.riskcode);\n  if (order === 0) {\n    // high confidence first\n    return parseInt(b.confidence) - parseInt(a.confidence);\n  }\n  return order;\n};\n\nconst OwaspBadge = (row: ZapReportSiteAlert) => {\n  const severity = row.riskcode;\n  const variant =\n    severity === \"0\"\n      ? \"info\"\n      : severity === \"1\"\n        ? \"warning\"\n        : severity === \"2\"\n          ? \"danger\"\n          : severity === \"3\"\n            ? \"danger\"\n            : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {row.riskdesc}\n    </Badge>\n  );\n};\n\ntype OwaspProps = { data: ZapReport; url: string };\n\nexport const Owasp: React.FC<OwaspProps> = ({ data, url }) => {\n  const alerts =\n    data && data.site && data.site.flatMap((site) => site.alerts) || [];\n  alerts.sort(orderBySeverity);\n  return (\n    (alerts.length && (\n      <Panel\n        title=\"OWASP\"\n        url={url}\n        info=\"Scan de vulnérabiliés OWASP baseline\"\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                risk/confidence\n              </th>\n              <th>name</th>\n            </tr>\n          </thead>\n          <tbody>\n            {alerts.map((alert, i: number) => {\n              return (\n                <tr key={alert.name + i}>\n                  <td className=\"text-center\">\n                    <OwaspBadge {...alert} />\n                  </td>\n                  <td>{alert.name}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\n\nimport { Row, Col, Alert } from \"react-bootstrap\";\nimport { Info } from \"react-feather\";\n\nimport { Panel } from \"./Panel\";\nimport { Grade } from \"./Grade\";\n\n\nconst sortByKey = (key: string) => (a: any, b: any) => {\n  if (a[key] > b[key]) {\n    return 1;\n  } else if (a[key] < b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nconst severities = [\"INFO\", \"OK\", \"LOW\", \"MEDIUM\", \"HIGH\", \"CRITICAL\"];\nconst getSeverityValue = (severity: string) => severities.indexOf(severity);\n\ntype SSLProps = { data: SslTestReport; url: string };\n\nexport const TestSSL: React.FC<SSLProps> = ({ data, url }) => {\n  const gradeEntry = data.find((entry) => entry.id === \"overall_grade\")\n  const grade =\n    data && gradeEntry && gradeEntry.finding;\n  const results = data.map((entry) => ({\n    ...entry,\n    severity_value: getSeverityValue(entry.severity), // add property for sort\n  }));\n  results.sort(sortByKey(\"severity_value\")).reverse();\n  const capReasons = data.filter((entry) => entry.id.indexOf('grade_cap_reason_') === 0).reverse();\n  return grade && (\n    <Panel title=\"SSL\" info=\"Informations collectées via testssl.sh\" url={url}>\n      <Row>\n        <Col>\n          <h3>\n            Scan Summary : <Grade small grade={grade} />\n          </h3>\n          <br />\n          {capReasons.map((reason: any, i: number) => {\n            return <Alert key={reason.id + i} variant=\"info\"><Info style={{ marginRight: 5 }} />{reason.finding}</Alert>\n          })}\n        </Col>\n      </Row>\n    </Panel>\n  ) || null\n};\n","import * as React from \"react\";\n\nimport { Alert, Table } from \"react-bootstrap\";\nimport Flags from \"country-flag-icons/react/3x2\";\n\nimport { smallUrl } from \"../utils\";\nimport { Panel } from \"./Panel\";\n\ntype TrackersProps = { data: ThirdPartiesReport };\n\ntype CookiesTableProps = { cookies: ThirdPartiesReportCookies };\n\nconst CookiesTable: React.FC<CookiesTableProps> = ({ cookies }) =>\n  (cookies && cookies.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={4}>\n            Cookies\n          </th>\n        </tr>\n        <tr>\n          <th>name</th>\n          <th>domain</th>\n          <th className=\"text-center\">httpOnly</th>\n          <th className=\"text-center\">secure</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cookies.map((cookie, i: number) => (\n          <tr key={cookie.name + \"\" + i}>\n            <td>{cookie.name}</td>\n            <td>{cookie.domain}</td>\n            <td className=\"text-center\">{cookie.httpOnly ? \"✔️\" : \"❌\"}</td>\n            <td className=\"text-center\">{cookie.secure ? \"✔️\" : \"❌\"}</td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nconst smallLinkify = (url: string) => (\n  <a href={url}>{smallUrl(url).substring(0, 25) + \"...\"}</a>\n);\n\ntype TrackersTableProps = { trackers: ThirdPartiesReportTrackers };\n\nconst TrackersTable: React.FC<TrackersTableProps> = ({ trackers }) =>\n  (trackers && trackers.length && (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th className=\"bg-dark text-white\" colSpan={3}>\n            Third-parties ressources\n          </th>\n        </tr>\n        <tr>\n          <th>type</th>\n          <th>url</th>\n          <th>remédiation</th>\n        </tr>\n      </thead>\n      <tbody>\n        {trackers.map((tracker, i: number) => {\n          return (\n            <tr key={tracker.url + i}>\n              <td>{tracker.type}</td>\n              <td>{smallLinkify(tracker.url)}</td>\n              <td>{tracker.details && tracker.details.message}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\ntype EndPointsTableProps = { endpoints: ThirdPartiesReportEndpoints };\n\nconst EndPointsTable: React.FC<EndPointsTableProps> = ({ endpoints }) =>\n  (endpoints && endpoints.length && (\n    <Table striped bordered hover style={{ marginBottom: 10 }}>\n      <thead>\n        <tr>\n          <th style={{ width: 100 }}>Flag</th>\n          <th>Hostname</th>\n          <th>IP</th>\n          <th>City</th>\n          <th>Country</th>\n        </tr>\n      </thead>\n      <tbody>\n        {endpoints.map((endpoint, i: number) => {\n          const Flag =\n            (endpoint.geoip &&\n              endpoint.geoip.country &&\n              Flags[endpoint.geoip.country.iso_code]) ||\n            null;\n          return (\n            <tr key={endpoint.hostname + \"-\" + endpoint.ip}>\n              <td className=\"text-center\">\n                {Flag && endpoint.geoip && endpoint.geoip.country && (\n                  <Flag\n                    style={{ width: 60 }}\n                    title={endpoint.geoip.country.names.fr}\n                  />\n                )}\n              </td>\n              <td>{endpoint.hostname}</td>\n              <td>{endpoint.ip}</td>\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.city &&\n                  endpoint.geoip.city.names.fr) ||\n                  \"?\"}\n              </td>\n\n              <td>\n                {(endpoint.geoip &&\n                  endpoint.geoip.country &&\n                  endpoint.geoip.country.names.fr) ||\n                  \"?\"}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </Table>\n  )) ||\n  null;\n\nexport const Trackers: React.FC<TrackersProps> = ({ data }) => {\n  const hasIssues = [];\n  if (data.cookies && data.cookies.length) {\n    hasIssues.push(...data.cookies);\n  }\n  if (data.trackers && data.trackers.length) {\n    hasIssues.push(...data.trackers);\n  }\n  return (\n    (hasIssues.length && (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <CookiesTable cookies={data.cookies} />\n        <TrackersTable trackers={data.trackers} />\n        <EndPointsTable endpoints={data.endpoints} />\n      </Panel>\n    )) || (\n      <Panel\n        title=\"Third parties\"\n        info=\"Scripts tiers embarqués dans la page web\"\n      >\n        <Alert variant=\"success\">Aucun script third-party detecté</Alert>\n      </Panel>\n    )\n  );\n};\n","import * as React from \"react\";\n\nimport { Table } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\n\n\ntype WappalyzerProps = { data: WappalyzerReport };\n\nexport const Wappalyzer: React.FC<WappalyzerProps> = ({ data }) => {\n    return (\n        (data && (\n            <Panel\n                title=\"Wappalyzer\"\n                info=\"Détection des technologies\"\n            >\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th style={{ width: 250 }}>\n                                name\n                            </th>\n                            <th>categories</th>\n                            <th>website</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.technologies && data.technologies.map((techno: any, i: number) => {\n                            return (\n                                <tr key={techno.name + i}>\n                                    <td>\n                                        {techno.name}\n                                    </td>\n                                    <td>{techno.categories && techno.categories.map((cat: any) => cat.name).join(\", \")}</td>\n                                    <td><a href={techno.website} target=\"_blank\" rel=\"nopoener noreferrer\">{techno.website}</a></td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Panel>\n        )) ||\n        null\n    );\n};\n","import * as React from \"react\";\nimport { Row, Col, Alert, Card } from \"react-bootstrap\";\n\nimport { Panel } from \"./Panel\";\nimport { Gauge } from \"./Gauge\";\n\ntype UpDownIoProps = { data: UpDownReport, url: string };\n\n\nexport const UpdownIo: React.FC<UpDownIoProps> = ({ data, url }) => {\n  const urlUpdownio =\n    (data && `https://updown.io/${data.token}`) ||\n    null;\n\n  return (\n    urlUpdownio\n    && data.url === url \n    && (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n        url={urlUpdownio}\n      >\n        <Row>\n          <Col\n            xs={12}\n            md={6}\n            lg={3}\n            className=\"text-center mb-3\">\n            <Card>\n              <Gauge\n                width={100}\n                height={60}\n                value={data.uptime * 100}\n                minValue={0}\n                maxValue={100}\n                animationSpeed={32}\n              />\n              <Card.Body>\n                <Card.Title>Taux de disponibilité sur un mois glissant</Card.Title>\n                <Card.Title\n                  style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                >\n                  {(data.uptime) + \"%\"}\n                </Card.Title>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col\n            xs={12}\n            md={6}\n            lg={3}\n            className=\"text-center mb-3\">\n            { data.ssl && <Card>\n              <Card.Body>\n                <Card.Title>Certificat TLS {data.ssl.valid ? 'valide' : 'expiré'}</Card.Title>\n                <Card.Title\n                  style={{ fontSize: \"2rem\", fontWeight: \"bold\" }}\n                >\n                  expire le {new Date(data.ssl.expires_at).toLocaleDateString()}\n                </Card.Title>\n              </Card.Body>\n            </Card>}\n          </Col>\n        </Row>\n      </Panel>\n    ) || (\n      <Panel\n        title=\"Temps de réponse\"\n        info=\"Informations collectées par updown.io\"\n      >\n        <Alert variant=\"success\">Aucune donnée updown.io associée</Alert>\n      </Panel>\n    ));\n};\n","import * as React from \"react\";\n\nimport { Table, Badge } from \"react-bootstrap\";\nimport { getLastUrlSegment } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst orderBySeverity = (a: DependabotNode, b: DependabotNode) => {\n  // high criticity first\n  const severities = new Map();\n  severities.set(\"CRITICAL\", 3);\n  severities.set(\"HIGH\", 2);\n  severities.set(\"MODERATE\", 1);\n  severities.set(\"LOW\", 0);\n  return (\n    severities.get(b.securityVulnerability.severity) -\n    severities.get(a.securityVulnerability.severity)\n  );\n};\n\nconst DependabotBadge = (node: DependabotNode) => {\n  const severity = node.securityVulnerability.severity;\n  const variant =\n    severity === \"LOW\"\n      ? \"info\"\n      : severity === \"MODERATE\"\n      ? \"warning\"\n      : severity === \"HIGH\"\n      ? \"danger\"\n      : severity === \"CRITICAL\"\n      ? \"danger\"\n      : \"info\";\n  return (\n    <Badge className=\"w-100\" variant={variant}>\n      {severity}\n    </Badge>\n  );\n};\n\ntype DependabotProps = { data: DependabotRepository; url: string };\n\nexport const Dependabot: React.FC<DependabotProps> = ({ data, url }) => {\n  console.log(\"data=\" + JSON.stringify(data));\n  const nodes =\n    data && data.vulnerabilityAlerts.totalCount > 0\n      ? data.vulnerabilityAlerts.nodes\n      : [];\n  data.vulnerabilityAlerts.nodes.sort(orderBySeverity);\n  return (\n    (data.vulnerabilityAlerts.totalCount > 0 && (\n      <Panel\n        title=\"Dependabot\"\n        url={data.url}\n        info={\"Scan des vulnérabiliés du dépôt Github \" + data.url}\n      >\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th style={{ width: 100 }} className=\"text-center\">\n                Sévérité\n              </th>\n              <th>Dépendance vulnérable</th>\n              <th>Vulnérabilités</th>\n            </tr>\n          </thead>\n          <tbody>\n            {nodes.map((node, i: number) => {\n              return (\n                <tr key={node.securityVulnerability.package.name + i}>\n                  <td className=\"text-center\">\n                    <DependabotBadge {...node} />\n                  </td>\n                  <td>{node.securityVulnerability.package.name}</td>\n                  <td>\n                    {node.securityVulnerability.advisory.references.map(\n                      (reference, i: number) => {\n                        return (\n                          <p key={getLastUrlSegment(reference.url) + i}>\n                            <a target=\"_blank\" href={reference.url}>\n                              {getLastUrlSegment(reference.url)}\n                            </a>\n                            <br />\n                          </p>\n                        );\n                      }\n                    )}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </Panel>\n    )) ||\n    null\n  );\n};\n","import * as React from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\nimport { Link } from \"react-router-dom\";\nimport { Clock } from \"react-feather\";\nimport { Jumbotron, Badge } from \"react-bootstrap\";\n\nimport { isToolEnabled } from \"../utils\";\nimport { HTTP } from \"./HTTP\";\nimport { LightHouse } from \"./LightHouse\";\nimport { Nuclei } from \"./Nuclei\";\nimport { Owasp } from \"./Owasp\";\nimport { TestSSL } from \"./TestSSL\";\nimport { Trackers } from \"./Trackers\";\nimport { Wappalyzer } from \"./Wappalyzer\";\nimport { UpdownIo } from \"./UpdownIo\";\nimport { Dependabot } from \"./Dependabot\";\n\ntype UrlDetailProps = { url: string; report: UrlReport };\n\nexport const Url: React.FC<UrlDetailProps> = ({ url, report, ...props }) => {\n  const updateDate = report && report.lhr && report.lhr.fetchTime;\n  if (!report) {\n    return <div>No data available for {url}</div>;\n  }\n  return (\n    <div>\n      <Jumbotron\n        style={{ height: 100, marginTop: 10, paddingTop: 20, marginBottom: 10 }}\n      >\n        <h4>\n          <a href={url} rel=\"noreferrer noopener\" target=\"_blank\">\n            {url}\n          </a>\n        </h4>\n        <p>\n          {report.category && (\n            <Link to={`/category/${report.category}`}>\n              <Badge style={{ marginRight: 5 }} variant=\"success\">\n                {report.category}\n              </Badge>\n            </Link>\n          )}\n          {report.tags &&\n            report.tags.map((tag: string) => (\n              <Link key={tag} to={`/tag/${tag}`}>\n                <Badge style={{ marginRight: 5 }} variant=\"info\">\n                  {tag}\n                </Badge>\n              </Link>\n            ))}\n          {updateDate && (\n            <span title={updateDate}>\n              <Clock size={12} style={{ marginRight: 5 }} />\n              Mise à jour il y a :{\" \"}\n              {formatDistanceToNow(new Date(updateDate), { locale: frLocale })}\n            </span>\n          )}\n        </p>\n      </Jumbotron>\n      {(isToolEnabled(\"lighthouse\") && report.lhr && (\n        <React.Fragment>\n          <LightHouse\n            data={report.lhr}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/lhr.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"dependabot\") && report.dependabot && (\n        <React.Fragment>\n          {report.dependabot.map((repository) => {\n            return (\n              <Dependabot key={repository.url} data={repository} url={url} />\n            );\n          })}\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"updownio\") && report.updownio && (\n        <React.Fragment>\n          <UpdownIo data={report.updownio} url={url} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"testssl\") && report.testssl && (\n        <React.Fragment>\n          <TestSSL\n            data={report.testssl}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/testssl.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"http\") && report.http && (\n        <React.Fragment>\n          <HTTP data={report.http} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"nuclei\") && report.nuclei && (\n        <React.Fragment>\n          <Nuclei data={report.nuclei} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"thirdparties\") && report.thirdparties && (\n        <React.Fragment>\n          <Trackers data={report.thirdparties} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"zap\") && report.zap && (\n        <React.Fragment>\n          <Owasp\n            data={report.zap}\n            url={`${process.env.PUBLIC_URL}/report/${window.btoa(\n              url\n            )}/zap.html`}\n          />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n      {(isToolEnabled(\"wappalyzer\") && report.wappalyzer && (\n        <React.Fragment>\n          <Wappalyzer data={report.wappalyzer} />\n          <br />\n        </React.Fragment>\n      )) ||\n        null}\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Button, Jumbotron, Alert } from \"react-bootstrap\";\nimport { AlertTriangle, Info } from \"react-feather\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { isToolEnabled } from \"../utils\";\n\nimport { Panel } from \"./Panel\";\n\nconst dashlordConfig: DashlordConfig  = require(\"../config.json\");\n\nexport const Intro: React.FC = () => {\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>{dashlordConfig.title || \"DashLord\"}</h1>\n        <br />\n        Le tableau de bord aggrège les données issues de plusieurs\n        outils qui évaluent chaque URL indépendamment.\n        <br />\n        <br />\n        L'évaluation des outils ne remplace en aucun cas une expertise manuelle,\n        et seule la page d'accueil du site est ici évaluée.\n        <br />\n        <br />\n        Vous pouvez soumettre de nouvelles URLs, proposer des corrections ou\n        consulter la roadmap en{\" \"}\n        <a\n          href=\"https://github.com/SocialGouv/dashlord/issues/new\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          cliquant ici\n        </a>\n        .\n        <br /><br />\n        <br />\n        <Link to=\"/dashboard\">\n          <Button variant=\"dark\">Accéder au tableau de bord</Button>\n        </Link>\n      </Jumbotron>\n\n      {isToolEnabled(\"lighthouse\") && <Panel title=\"Google Lighthouse\">\n        Permet un audit automatique de page web :\n        <br />\n        <br />\n        <li>Performances de chargement</li>\n        <li>Bonnes pratiques SEO (référencement)</li>\n        <li>Bonnes pratiques accessibilité (moteur Axe)</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Les mesures de performance, sont un instantané, donc pas forcément\n          représentatives\n          <br />\n          <AlertTriangle size={16} style={{ marginRight: 5 }} /> Les mesures\n          d'accessibilité n'abordent pas du tout{\" \"}\n          <a\n            href=\"https://www.numerique.gouv.fr/publications/rgaa-accessibilite/\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            le RGAA\n          </a>\n          .\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://developers.google.com/web/tools/lighthouse\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"dependabot\") && <Panel title=\"Dependabot\">\n        Recense les vulnérabilités de ton code\n        <br />\n        <br />\n        <li>Scan des vulnérabilités sur le dépôt Github du code</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://dependabot.com/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://docs.github.com/en/code-security/supply-chain-security/about-alerts-for-vulnerable-dependencies\"\n        >\n          Security scans\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"zap\") && <Panel title=\"OWASP Zed Attack Proxy\">\n        Scan de vulnérabilités passif \"baseline\" qui permet de détecter des\n        risques de sécurité.\n        <br />\n        <br />\n        <li>Bonnes pratiques web</li>\n        <li>Bonnes pratiques http</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://www.zaproxy.org/docs/docker/baseline-scan/\"\n        >\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"testssl\") && <Panel title=\"testssl.sh\">\n        Évalue le niveau de confiance d'un certificat SSL\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Protocoles disponibles</li>\n        <li>Compatibilité navigateurs</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Alert variant=\"info\">\n          <Info size={16} style={{ marginRight: 5 }} />\n          L'audit complet avec les recommandations de correction est disponible\n          pour chaque URL\n        </Alert>\n        <br />\n        <Button variant=\"dark\" href=\"https://testssl.sh/\">\n          Site officiel\n        </Button>\n        &nbsp;\n        <Button variant=\"dark\" href=\"https://github.com/drwetter/testssl.sh\">\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"http\") && <Panel title=\"Mozilla HTTP observatory\">\n        Évalue le niveau de qualité/sécurité de la page web et de son serveur\n        <br />\n        <br />\n        <li>Bonnes pratiques de configuration</li>\n        <li>Bonnes pratiques web</li>\n        <li>Solidité des clés de chiffrement</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://observatory.mozilla.org/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://github.com/mozilla/http-observatory/blob/master/httpobs/docs/scoring.md\"\n        >\n          Méthodologie\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"updownio\") && <Panel title=\"Updown.io\">\n        Évalue les temps de réponse de son serveur\n        <br />\n        <br />\n        <li>Disponibilité du site web avec calcul régulier de l'APDEX</li>\n        <li>Validité des certificats TLS</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://updown.io/\">\n          Site officiel\n        </Button>\n        <Button\n          style={{ marginLeft: 5 }}\n          variant=\"dark\"\n          href=\"https://updown.uservoice.com/knowledgebase/articles/915588-what-is-apdex\"\n        >\n          APDEX\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"nuclei\") && <Panel title=\"Nucléi\">\n        Détecte plus de 700 erreurs de configuration courantes sur les\n        applications webs.\n        <br />\n        <br />\n        <li>Sécurité</li>\n        <li>Bonnes pratiques web</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://nuclei.projectdiscovery.io/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"Third-parties\">\n        Liste tous les scripts externes chargés par une URL et qui peuvent avoir\n        un impact sur :\n        <br />\n        <br />\n        <li>Performances web</li>\n        <li>Sécurité</li>\n        <li>Vie privée</li>\n        <br />\n        <Alert variant=\"warning\">\n          <AlertTriangle size={16} style={{ marginRight: 5 }} />\n          Certains script légitimes peuvent apparaitre dans cette catégorie\n          s'ils sont hébergés sur d'autres serveurs\n        </Alert>\n        <Button\n          variant=\"dark\"\n          href=\"https://github.com/SocialGouv/thirdparties\"\n        >\n          Code source\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"thirdparties\") && <Panel title=\"GeoIP2\">\n        Géolocalise tous les serveurs contactés lors de l'ouverture d'une URL.\n        <br />\n        <br />\n        <li>Vie privée</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.maxmind.com/en/geoip-demo\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n      {isToolEnabled(\"wappalyzer\") && <Panel title=\"Wappalyzer\">\n        Wappalyzer reconnait +1500 technologies web, Javascript, CMS, outillage...\n        <br />\n        <br />\n        <li>Stack technique</li>\n        <li>Obsolescence</li>\n        <li>Parc</li>\n        <br />\n        <Button variant=\"dark\" href=\"https://www.wappalyzer.com/\">\n          Site officiel\n        </Button>\n      </Panel>}\n\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}","import * as React from \"react\";\n\nimport { Jumbotron } from \"react-bootstrap\";\n\n\n\nexport const About: React.FC = () => {\n    return (\n        <div>\n            <br />\n            <Jumbotron style={{ padding: \"2em\", textAlign: \"center\" }}>\n                <h1>À propos</h1>\n            </Jumbotron>\n            <div style={{ margin: '0 auto', maxWidth: '80%' }}>\n                <br />\n                  DashLord est <strong>100% open source</strong>, vous pouvez y contribuer en créant de la documentation, en proposant du code, ou encore en partageant vos questions <a href=\"https://github.com/socialgouv/dashlord\" target=\"_blank\" rel=\"noopener noreferrer\">sur le repository github</a>.\n\n               < br /> <br />\n\n                 L'objectif de DashLord est d'identifier des points d'attention mais aussi de proposer des solutions actionnables.\n                 < br /> <br />\n\n                 DashLord est né à la <a href=\"https://fabrique.social.gouv.fr\" target=\"_blank\" rel=\"noopener noreferrer\" > Fabrique des ministères sociaux</a > pour répondre aux besoins d'évaluation et de mise en oeuvre des bonnes pratiques de développement web.\n                  < br /> <br />\n                Vous pouvez facilement créer votre propre DashLord pour vos URLs en suivant <a href=\"https://github.com/SocialGouv/dashlord/blob/main/README.md\" target=\"_blank\" rel=\"noopener noreferrer\">les instructions sur le GitHub</a>.\n            </div>\n        </div >\n    );\n};\n","import * as React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nimport { Jumbotron, CardColumns } from \"react-bootstrap\";\nimport uniq from \"lodash.uniq\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { Panel } from \"./Panel\";\n\ntype UsageChartProps = { data: any };\n\nconst UsageChart: React.FC<UsageChartProps> = ({ data }) => {\n  return (\n      <BarChart\n        width={300}\n        height={200}\n        data={data}\n        margin={{\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"count\" fill=\"#82ca9d\" />\n      </BarChart>\n  );\n};\n\nconst toChartData = (category: WappalyzerParsedCategory) =>\n  category.items.map((item) => ({\n    name: item.name,\n    count: item.urls.length,\n  }));\n\ntype WappalyzerDashboardProps = { report: DashLordReport };\n\ntype WappalyzerParsedCategory = {\n  name: string;\n  items: {\n    name: string;\n    website: string | undefined;\n    urls: string[];\n  }[];\n};\n\nconst getCategoriesByUrl = (report: DashLordReport) => {\n  const allTechnologies = report\n    .flatMap((url) => ({ url, wappalyzer: url.wappalyzer }))\n    .filter(({ url, wappalyzer }) => !!wappalyzer)\n    .flatMap(\n      ({ url, wappalyzer }) =>\n        (wappalyzer &&\n          wappalyzer.technologies.map((details) => ({\n            ...details,\n            url: url.url,\n          }))) ||\n        []\n    );\n  const categoriesNames = uniq(\n    allTechnologies.flatMap(\n      (t) => t.categories && t.categories.map((c) => c.name)\n    )\n  );\n\n  const getTechUrl = (name: string) =>\n    allTechnologies.find((t) => t.name === name)?.website;\n\n  const categories = categoriesNames.map((name) => {\n    const categoryTechs = allTechnologies.filter(\n      (t) => t.categories && t.categories.find((c) => c.name === name)\n    );\n\n    // group techs by name and sort by count desc\n    const byTech = categoryTechs.reduce((a, t) => {\n      if (!a[t.name]) {\n        a[t.name] = [];\n      }\n      a[t.name].push(t.url);\n      return a;\n    }, {} as Record<string, any>);\n\n    const sortedTechs = Object.keys(byTech)\n      .map((name) => ({\n        name,\n        website: getTechUrl(name),\n        urls: byTech[name] as string[],\n      }))\n      .sort((a, b) => a.urls.length - b.urls.length)\n      .reverse();\n\n    return {\n      name,\n      items: sortedTechs,\n    };\n  });\n\n  return categories;\n};\n\nexport const WappalyzerDashboard = ({ report }: WappalyzerDashboardProps) => {\n  const categories = getCategoriesByUrl(report);\n  return (\n    <div>\n      <br />\n      <Jumbotron style={{ padding: \"2em\" }}>\n        <h1>Wappalyzer : technologies détectées</h1>\n      </Jumbotron>\n      <CardColumns>\n        {categories.map((category) => (\n          <Panel key={category.name} title={category.name}>\n            <UsageChart data={toChartData(category)} />\n            <br/>\n            {category.items.map((item) => (\n              <div key={item.name}>\n                <b>\n                  <a\n                    href={item.website}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {item.name} ({item.urls.length})\n                  </a>\n                </b>\n                <ul>\n                  {item.urls.map((url) => (\n                    <li key={url}>\n                      <Link to={`/url/${url}`}>{url}</Link>\n                    </li>\n                  ))}\n                </ul>\n                <br />\n              </div>\n            ))}\n          </Panel>\n        ))}\n      </CardColumns>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nimport { Container, Row, Alert } from \"react-bootstrap\";\n\nimport {\n  useParams,\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport { Sidebar } from \"./components/Sidebar\";\nimport { Topbar } from \"./components/Topbar\";\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Url } from \"./components/Url\";\nimport { Intro } from \"./components/Intro\";\nimport { ScrollToTop } from  \"./components/ScrollToTop\";\nimport { About } from \"./components/About\";\nimport { WappalyzerDashboard } from \"./components/WappalyzerDashboard\";\n\nconst report: DashLordReport = require(\"./report.json\");\n\ntype CategoryRouteProps = { report: DashLordReport };\n\n// for some reason react-router `:url*` didnt work, use `*` only\ninterface CategoryParamTypes {\n  category: string;\n}\n\nconst CategoryRoute: React.FC<CategoryRouteProps> = (props) => {\n  const params = useParams<CategoryParamTypes>();\n  const category = window.decodeURIComponent(params.category);\n  const urls = props.report.filter((u) => u.category === category)\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{category} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface TagParamTypes {\n  tag: string;\n}\n\ntype TagRouteProps = { report: DashLordReport };\n\nconst TagRoute: React.FC<TagRouteProps> = (props) => {\n  const params = useParams<TagParamTypes>();\n  const tag = window.decodeURIComponent(params.tag);\n  const urls = props.report.filter((u) => u.tags && u.tags.includes(tag))\n  return (\n    <React.Fragment>\n      <br />\n      <h3>{tag} : {urls.length} urls</h3>\n      <Dashboard report={urls} />\n    </React.Fragment>\n  );\n};\n\ninterface UrlParamTypes {\n  \"0\": string;\n}\n\ntype UrlRouteProps = { report: DashLordReport };\n\nconst UrlRoute: React.FC<UrlRouteProps> = (props) => {\n  const params = useParams<UrlParamTypes>();\n  const url = window.decodeURIComponent(params[\"0\"]);\n  const urlData = props.report.find((u) => u.url === url);\n  if (!urlData) {\n    return <Alert variant=\"danger\">Impossible de trouver le rapport pour {url}</Alert>\n  }\n  return <Url url={url} report={urlData} />\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <ScrollToTop />\n        <Topbar />\n        <Container fluid>\n          <Row>\n            <Sidebar report={report} />\n            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n              <Switch>\n                <Route path=\"/url/*\">\n                  <UrlRoute report={report} />\n                </Route>\n                <Route path=\"/dashboard\">\n                  <Dashboard report={report} />\n                </Route>\n                <Route path=\"/category/:category\">\n                  <CategoryRoute report={report} />\n                </Route>\n                <Route path=\"/tag/:tag\">\n                  <TagRoute report={report} />\n                </Route>\n                <Route path=\"/wappalyzer\">\n                  <WappalyzerDashboard report={report} />\n                </Route>\n                <Route path=\"/about\">\n                  <About />\n                </Route>\n                <Route path=\"/\">\n                  <Intro />\n                </Route>\n              </Switch>\n            </main>\n          </Row>\n        </Container>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport \"./bootstrap-theme.scss\";\nimport \"./custom.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}